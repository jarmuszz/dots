;; -*- mode: Lisp -*-
;; Stumpwm configuration file

;;; Basic
(defparameter confpath "~/.config/stumpwm")

(init-load-path confpath)
(add-to-load-path "~/.config/stumpwm")
(set-prefix-key (kbd "s-d"))
(setf *mouse-focus-policy* :click)
;;; END of Basic

;;; Meta
(defmacro strcon (&rest body)
  "Concatenate strings"
  `(concatenate 'string ,@body))

(defmacro shell-cmd-neol (cmd &key (prefix "") (affix ""))
  "Runs shell command and returns the result without the EOL.
Can be formatted with the :PREFIX and :AFFIX arguments."
  `(run-shell-command (strcon "echo -n " ,prefix "$(" ,cmd ")" ,affix) t))

(defun define-mult-keys (map list)
  (loop for (key . cmd) in list
     do (define-key map (kbd key) cmd)))

(defmacro inbtp (n min max)
  "``Does N fit in range (MIN; MAX)?'' predicate."
  `(and (>= ,n ,min)
        (<= ,n ,max)))

(defun loadconf (&rest filenames)
  "Loads file from the init directory"
  (loop for f in filenames
       do (load (strcon confpath "/" f))))
;;; END of Meta


;;; Loading confs
(loadconf "remap.lisp"
          "keymaps.lisp"
          "media.lisp"
          "modeline.lisp")
;;; END of Loading confs



;;; Simple Keybindings
(define-mult-keys *root-map*
    '(("SunPrint_Screen"   . "run-shell-command flameshot gui")
      ("s-SunPrint_Screen" . "run-shell-command xfce4-screenshooter")
      ("s-f"               . "fullscreen")
      ("s-t"               . "float-this")
      ("s-T"               . "unfloat-this")))
;;; END of Simple Keybindigs


;;; Colors
(load "~/.cache/wal/colors.lisp")       ; Generated by pywal
(set-bg-color background)
(set-fg-color foreground)

(set-border-color color1)
(set-win-bg-color color1)

(set-focus-color color1)
(set-unfocus-color background)

;; Floating windows
; Doesnt change the color at start (??) TODO
(set-float-focus-color color1)
(set-float-unfocus-color background)
;;; END of Colors


;;; Create 10 initial groups
;; Change name of the first group to 1
(setf (group-name (car (screen-groups (current-screen)))) "1")

;; Create the rest
(loop for n from 2 to 10
      do (gnewbg (format nil "~A" n)))
;;; END 10 initial groups


;;; Modules
;; swm-gaps
(load-module "swm-gaps")
(setf swm-gaps:*inner-gaps-size* 10)
(setf swm-gaps:*outer-gaps-size* 15)
(run-commands "toggle-gaps-on")

;; xft-font
;; git clone https://github.com/LispLima/clx-truetype ~/quicklisp/local-projects/clx-truetype
(ql:quickload "clx-truetype")
(load-module "ttf-fonts")

;; next thing is important (nothing else has worked for me)
(clx-truetype:cache-font-file "/usr/share/fonts/TTF/Hack-Regular.ttf")

(set-font
 (make-instance 'xft:font
		:family "Hack"
		:subfamily "Regular"
		:size 9
		:antialias t))
;;; END of modules


;;; Autostart
(mapc #'run-shell-command '("picom"
                            "wal -R"))
;;; END of autostart
